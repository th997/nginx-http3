name: build

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [main]
    paths:
      - "**.sh"
      - Dockerfile
  workflow_dispatch:

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    name: Build for amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build on amd64
        uses: ./

      - name: Upload amd64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: nginx-amd64-v8.${{ env.minor }}.${{ env.patch }}
          path: nginx.deb

      - name: Update
        if: ${{ env.change }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update hash and version

      - name: Release
        if: ${{ env.change }}
        uses: softprops/action-gh-release@v1
        with:
          files: nginx.deb
          body: "SHA256: ${{ env.hash }}"
          tag_name: v8.${{ env.minor }}.${{ env.patch }}
          generate_release_notes: false

  build-arm64:
    runs-on: ubuntu-latest
    name: Build for arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build in ARM64 container
        run: |
          docker run --rm --privileged \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            --platform linux/arm64 \
            arm64v8/debian:bullseye-slim \
            bash -c "apt-get update && apt-get install -y bash ca-certificates && chmod +x build.sh && ./build.sh"

      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: nginx-arm64-v8.${{ env.minor }}.${{ env.patch }}
          path: nginx.deb

      - name: Release arm64 (optional)
        if: ${{ env.change }}
        uses: softprops/action-gh-release@v1
        with:
          files: nginx.deb
          body: "SHA256 (arm64): ${{ env.hash }}"
          tag_name: v8.${{ env.minor }}.${{ env.patch }}
          generate_release_notes: false
